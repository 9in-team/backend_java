plugins {
    id 'java'
    id 'org.springframework.boot' apply(false)
    id 'org.asciidoctor.jvm.convert' apply(false)
    id 'io.spring.dependency-management'
    id 'com.diffplug.spotless'
    id 'jacoco'
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.asciidoctor.jvm.convert'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = false
    jar.enabled = true

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.data:spring-data-jpa'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()

        finalizedBy jacocoTestReport
    }

    tasks.named('asciidoctor') {
        dependsOn restDocsTest
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
        }

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "**/config/*"
                ])
            }))
        }

        finalizedBy jacocoTestCoverageVerification
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.30
                }
            }
        }
    }
}